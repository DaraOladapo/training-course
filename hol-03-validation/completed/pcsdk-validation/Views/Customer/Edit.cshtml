@model pcsdk_validation.Models.CustomerViewModel

@{
  ViewBag.Title = "Edit Customer";
}

<h2>Edit Customer</h2>


@using (Html.BeginForm()) {
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <h4>Customer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (Model.ValidationErrors.Any()) {
      <ul style="color:red">
        @foreach (var pcValidationError in Model.ValidationErrors) {
          <li>@pcValidationError</li>
        }
      </ul>
    }

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.TenantId, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.TenantId, new { htmlAttributes= new { @class = "form-control", @readonly = "true" } })
        @Html.ValidationMessageFor(model => model.Customer.TenantId, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.CompanyName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.Domain, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.Domain, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
        @Html.ValidationMessageFor(model => model.Customer.Domain, "", new { @class = "text-danger" })
      </div>
    </div>

    <h4>Customer Billing Profile</h4>
    <hr />
    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.CompanyName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.FirstName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.LastName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.Email, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.Email, "", new { @class = "text-danger" })
      </div>
    </div>

    <h4>Customer Billing Profile</h4>
    <hr />
    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.Address.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.Address.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.Address.PhoneNumber, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.Address.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.Address.Address1, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.Address.Address1, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.Address.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.Address.Address2, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.Address.Address2, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.Address.City, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.Address.City, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.Address.City, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.Address.State, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.Address.State, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.Address.State, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.Address.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.Address.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.Address.PostalCode, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.Address.Region, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Customer.BillingProfile.Address.Region, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.Address.Region, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Customer.BillingProfile.Address.Country, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.DropDownListFor(model => model.Customer.BillingProfile.Address.Country, Model.Countries)
        @Html.ValidationMessageFor(model => model.Customer.BillingProfile.Address.Country, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
      </div>
    </div>
  </div>
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
